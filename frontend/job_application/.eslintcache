[{"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/index.js":"1","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/App.js":"2","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reportWebVitals.js":"3","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/store.js":"4","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reducers/index.js":"5","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reducers/errorReducer.js":"6","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/actions/types.js":"7","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reducers/authReducer.js":"8","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/actions/authActions.js":"9","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/actions/errorActions.js":"10","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/AppNavbar.js":"11","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/auth/register.js":"12","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/auth/logout.js":"13","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/auth/loginModal.js":"14","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/landingPage.js":"15","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/recruiterVisit.js":"16","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/applicantVisit.js":"17","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reducers/applicantReducer.js":"18","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/applicantEdit.js":"19","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/actions/applicantActions.js":"20","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/addJob.js":"21","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/viewJob.js":"22","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/editJobModal.js":"23","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/addSopApply.js":"24","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/myApplications.js":"25","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/recruiterApplicationView.js":"26"},{"size":478,"mtime":1610291630075,"results":"27","hashOfConfig":"28"},{"size":1558,"mtime":1611402333227,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1610291094998,"results":"30","hashOfConfig":"28"},{"size":402,"mtime":1610291712954,"results":"31","hashOfConfig":"28"},{"size":305,"mtime":1610430180513,"results":"32","hashOfConfig":"28"},{"size":614,"mtime":1610292925250,"results":"33","hashOfConfig":"28"},{"size":826,"mtime":1610528046704,"results":"34","hashOfConfig":"28"},{"size":2022,"mtime":1610561300294,"results":"35","hashOfConfig":"28"},{"size":2168,"mtime":1610443483730,"results":"36","hashOfConfig":"28"},{"size":277,"mtime":1610296334033,"results":"37","hashOfConfig":"28"},{"size":2528,"mtime":1610441870621,"results":"38","hashOfConfig":"28"},{"size":5177,"mtime":1610714911476,"results":"39","hashOfConfig":"28"},{"size":551,"mtime":1610516791583,"results":"40","hashOfConfig":"28"},{"size":3432,"mtime":1610395299709,"results":"41","hashOfConfig":"28"},{"size":924,"mtime":1610427314153,"results":"42","hashOfConfig":"28"},{"size":4300,"mtime":1610775328038,"results":"43","hashOfConfig":"28"},{"size":19186,"mtime":1611643736316,"results":"44","hashOfConfig":"28"},{"size":1439,"mtime":1610529788817,"results":"45","hashOfConfig":"28"},{"size":6712,"mtime":1610530704601,"results":"46","hashOfConfig":"28"},{"size":2052,"mtime":1610530367298,"results":"47","hashOfConfig":"28"},{"size":6074,"mtime":1610776919569,"results":"48","hashOfConfig":"28"},{"size":4642,"mtime":1611402355189,"results":"49","hashOfConfig":"28"},{"size":3765,"mtime":1611126781528,"results":"50","hashOfConfig":"28"},{"size":6997,"mtime":1611522095294,"results":"51","hashOfConfig":"28"},{"size":2021,"mtime":1611399226214,"results":"52","hashOfConfig":"28"},{"size":15078,"mtime":1611643933898,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"5eunxj",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"56"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/index.js",[],["121","122"],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/App.js",["123"],"import './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/authActions'\nimport { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport AppNavbar from './components/AppNavbar'\nimport LandingPage from './components/screens/landingPage'\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport ApplicantEdit from './components/screens/applicantEdit'\nimport AddJob from './components/screens/addJob'\nimport ViewJobs from './components/screens/viewJob'\nimport AddSopApply from './components/screens/addSopApply'\nimport MyApplication from './components/screens/myApplications'\nimport RecruiterApplicationView from './components/screens/recruiterApplicationView'\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n  }\n\n  render() {\n    return (\n      <Router>\n        <Provider store = { store }>\n          <div className=\"app\">\n              <Route path=\"/\" component={LandingPage}/>\n              <Route path=\"/applicantEdit\" component={ApplicantEdit}/>\n              <Route path=\"/addJob\" component={AddJob}/>\n              <Route path=\"/viewJob\" component={ViewJobs}/>\n              <Route path=\"/applyJob\" component={AddSopApply}/>\n              <Route path=\"/myApplication\" component={MyApplication}/>\n              <Route path=\"/recruiterApplication\" component={RecruiterApplicationView}></Route>\n            <AppNavbar/>\n          </div>\n        </Provider>\n      </Router>\n    );\n  }\n}\n\nexport default App;","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reportWebVitals.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/store.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reducers/index.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reducers/errorReducer.js",["124"],"import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types'\n\nconst initialState = {\n    msg: {},\n    status: null,\n    id: null\n}\n\nexport default function ( state = initialState, action){\n    switch(action.type){\n        case GET_ERRORS:\n            return {\n                msg: action.payload.msg,\n                status: action.payload.status,\n                id: action.payload.id\n            }\n        case CLEAR_ERRORS: {\n            return{\n                msg: {},\n                status: null,\n                id: null\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/actions/types.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reducers/authReducer.js",["125"],"import { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL } from '../actions/types'\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null,\n    role: localStorage.getItem('role'),\n    email: localStorage.getItem('email')\n};\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case USER_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n            }\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload,\n                role: action.payload.user!=null ? action.payload.user.role : null,\n                email: action.payload.user!=null ? action.payload.user.email : null \n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', action.payload.token);\n            localStorage.setItem('role', action.payload.user.role);\n            localStorage.setItem('email', action.payload.user.email)\n            localStorage.setItem('name', action.payload.user.name);\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                isLoading: false,\n                role: action.payload.user.role,\n                email: action.payload.user.email\n            }\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT_SUCCESS:\n        case REGISTER_FAIL:\n            localStorage.removeItem('token');\n            localStorage.removeItem('role')\n            return {\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false,\n                role: null,\n                email: null\n            }\n        default:\n            return state;\n    }\n}","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/actions/authActions.js",["126","127"],"import axios from 'axios';\nimport { combineReducers } from 'redux';\nimport { returnErrors } from './errorActions';\nimport {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL, \n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL\n} from './types';\n\nexport const loadUser = () => (dispatch, getState) => {\n    dispatch({ type: USER_LOADING });\n\n    axios.get('/api/auth/user', tokenConfig(getState))\n        .then(res => dispatch ({\n            type: USER_LOADED,\n            payload: res.data\n        }))\n}\n\nexport const register = ({ name, email, password, role }) => dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ name, email, role, password });\n    axios.post('/api/users', body, config)\n        .then(res => dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        }))\n        .catch( err => {\n            dispatch( returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL') );\n            dispatch({\n                type: REGISTER_FAIL,\n            })\n        })\n}\n\nexport const login = ({ email, password}) => dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ email, password });\n    axios.post('/api/auth', body, config)\n        .then(res => dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        }))\n        .catch( err => {\n            dispatch( returnErrors(err.response.data , err.response.status, 'LOGIN_FAIL') );\n            dispatch({\n                type: LOGIN_FAIL,\n            })\n        })\n}\n\n\nexport const logout = () => {\n    return {\n        type: LOGOUT_SUCCESS\n    }\n}\n\nexport const tokenConfig = (getState) => {\n    // getting the token\n    const token = getState().auth.token;\n\n    // Headers\n    const config = {\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    }\n\n    // If token then adding to headers\n    if(token) {\n        config.headers['x-auth-token'] = token;\n    }\n\n    return config\n}\n\n","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/actions/errorActions.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/AppNavbar.js",["128"],"import React, {Component, Fragment} from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Container\n} from 'reactstrap';\nimport RegisterModal from './auth/register'\nimport Logout from './auth/logout';\nimport LoginModal from './auth/loginModal'\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\n\n\nclass AppNavbar extends Component {\n\n    static propTypes = {\n        auth: propTypes.object.isRequired\n    }\n    state = {\n        isOpen: false\n    }\n\n    toggle = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n\n    render() {\n        const { isAuthenticated, user, role } = this.props.auth;\n        const authLinks = (\n            <Fragment>\n                <span className=\"navbar-text mr-3\" style={{ color: \"violet\" }}>\n                    <strong>{ user ? `Welcome ${user.name}` : ''}</strong>\n                </span>\n                { role === \"Applicant\" ? \n                <Link to=\"/applicantEdit\">\n                    <span className=\"navbar-text mr-3\" style={{ color: \"violet\" }}>\n                        <strong>Account</strong>\n                    </span>\n                </Link> : null}\n                <NavItem>\n                    <Logout/>\n                </NavItem>\n            </Fragment>\n        )\n\n        const guestLinks = (\n            <Fragment>\n                <NavItem>\n                    <RegisterModal/>\n                </NavItem>\n                <NavItem>\n                    <LoginModal/>\n                </NavItem>\n            </Fragment>\n        )\n\n        return (\n            <div>\n                <Navbar color = \"dark\" dark expand=\"sm\" className=\"mb-5\">\n                    <Container>\n                        <Link to=\"/\">\n                            <NavbarBrand href=\"/\">JOB APPLICATION PORTAL</NavbarBrand>\n                        </Link>\n                        <NavbarToggler onClick={this.toggle}></NavbarToggler>\n                        <Collapse isOpen={this.state.isOpen} navbar>\n                            <Nav className=\"ml-auto\" navbar>\n                                { isAuthenticated ?  authLinks : guestLinks }\n                            </Nav>\n                        </Collapse>\n                    </Container>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n})\n\nexport default connect( mapStateToProps, null)(AppNavbar)","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/auth/register.js",["129"],"import React, { Component } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {register} from '../../actions/authActions';\nimport { clearErrors } from \"../../actions/errorActions\";\nimport { addApplicantData } from \"../../actions/applicantActions\"\nimport axios from 'axios'\n\nclass RegisterModal extends Component {\n    state = {\n        modal: false,\n        name: '',\n        password: '',\n        email: '',\n        role: 'Applicant',\n        msg: null,\n    }\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        register: PropTypes.func.isRequired,\n        clearErrors: PropTypes.func.isRequired,\n        addApplicantData: PropTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps){\n        const { error } = this.props;\n        if(error !== prevProps.error){\n            if(error.id === 'REGISTER_FAIL'){\n                this.setState({ msg: error.msg.msg });\n            } else {\n                this.setState( {msg: null} );\n            }\n        }\n\n        if(this.state.modal){\n            if(this.props.isAuthenticated){\n                this.toggle();\n            }\n        }\n    }\n\n    toggle = () => {\n        this.props.clearErrors();\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault()\n        const { name, email, password, role} = this.state;\n        const newUser = {\n            name,\n            email,\n            password,\n            role\n        };\n        this.props.register(newUser);\n        if(role == \"Applicant\"){\n            this.props.addApplicantData(newUser)\n        }\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const body = JSON.stringify({ name, email, contact_number: '', bio: '' } )\n        console.log(`${body}`)\n        await axios.post('/api/recruiterProfile/', body, config)\n            .then( res => ({\n            })   \n            )\n            .catch(err => {\n                console.log(err.response);\n                alert('An error occurred! Try submitting the form again.');\n            });\n    }\n\n    render(){\n        return (\n            <div>\n                <NavLink onClick={this.toggle} href='#'>\n                    Register\n                </NavLink> \n                <Modal\n                    centered = {true}\n                    isOpen = {this.state.modal}\n                    toggle = {this.toggle}>\n                    <ModalHeader toggl={this.toggle}>Register</ModalHeader>\n                    <ModalBody>\n                        { this.state.msg ? <Alert color=\"danger\">{this.state.msg}</Alert> : null }\n                        <Form onSubmit={this.onSubmit}>\n                            <FormGroup>\n                                <Label for=\"name\" style={{marginBottom: '0.5rem'}}>\n                                    Name:\n                                </Label>\n                                <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\" onChange={this.onChange} style= {{ marginBottom: '1rem' }}>\n                                </Input>\n\n                                <Label for=\"email\" style={{marginBottom: '0.5rem'}}>\n                                    Email:\n                                </Label>\n                                <Input style={{marginBottom: '1rem'}} type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" onChange={this.onChange}>\n                                </Input>\n\n                                <Label for=\"password\" style={{marginBottom: '0.5rem'}}>\n                                    Password:\n                                </Label>\n                                <Input style={{marginBottom: '1rem'}} type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" onChange={this.onChange}>\n                                </Input>\n                                <Label for=\"role\" style={{marginBottom: '0.5rem', marginRight:'1rem'}}>\n                                    Role:\n                                </Label>\n                                <select name=\"role\" onChange={this.onChange} >\n                                    <option value=\"Applicant\" selected >Applicant</option>\n                                    <option value=\"Recruiter\" >Recruiter</option>\n                                </select>\n                                <Button color=\"dark\" style={{marginTop: '2rem'}} block>Register</Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n})\n\nexport default connect(mapStateToProps, { register, clearErrors, addApplicantData })(RegisterModal);","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/auth/logout.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/auth/loginModal.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/landingPage.js",["130"],"import { Component } from \"react\";\nimport '../../App.css'\nimport ApplicantVisit from './applicantVisit'\nimport RecruiterVisit from './recruiterVisit'\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\n\n\nclass LandingPage extends Component {\n\n    static propTypes = {\n        auth: propTypes.object.isRequired\n    }\n    render() {\n        const { isAuthenticated, user, role } = this.props.auth;\n        return (\n            !isAuthenticated ? \n            <div className = \"box\">\n                <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\n                    <h1 style={{ color:'white'}}>Welcome.</h1>\n                </div>\n            </div> : role === \"Applicant\" ? <ApplicantVisit/> : <RecruiterVisit/>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n})\n\nexport default connect( mapStateToProps, null)(LandingPage)","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/recruiterVisit.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/applicantVisit.js",["131","132","133","134","135","136","137","138"],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reducers/applicantReducer.js",["139"],"import { APPLICANT_DATA_LOADED, APPLICANT_DATA_LOADING, APPLICANT_DATA_POSTING, APPLICANT_DATA_POSTED, APPLICANT_DATA_INITIALISING, APPLICANT_DATA_INITIALISED } from '../actions/types'\n\nconst initialState = {\n    email : localStorage.getItem('email'),\n    isLoading: false,\n    applicantData: null\n}\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case APPLICANT_DATA_LOADING: {\n            return{\n                ...state,\n                isLoading: true\n            }\n        }\n        case APPLICANT_DATA_LOADED: {\n            return{\n                ...state,\n                isLoading: false,\n                applicantData: action.payload\n            }\n        }\n        case APPLICANT_DATA_POSTING: {\n            return{\n                ...state,\n                isLoading: true\n            }\n        }\n        case APPLICANT_DATA_POSTED: {\n            return{\n                ...state,\n                isLoading: false,\n                applicantData: action.payload\n            }\n        }\n        case APPLICANT_DATA_INITIALISING: {\n            return{\n                ...state,\n                isLoading: true\n            }\n        }\n        case APPLICANT_DATA_INITIALISED: {\n            return{\n                ...state,\n                applicantData: action.payload,\n                isLoading: false\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/applicantEdit.js",["140","141"],"import { Component } from \"react\";\nimport '../../App.css';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux'\nimport { getApplicantData, updateApplicantData } from '../../actions/applicantActions'\nimport { Button, Form, FormGroup, Label, ListGroupItem} from 'reactstrap';\nimport { combineReducers } from \"redux\";\n\nclass ApplicantEdit extends Component {\n\n    // state = {\n    //     name: null,\n    //     email: localStorage.getItem('email'),\n    //     education: null,\n    //     skills: null,\n    // }\n    constructor(props){\n        super(props);\n        this.state = {\n            name: null,\n            email: localStorage.getItem('email'),\n            education: null,\n            skills: null,\n            data: null,\n        }\n    }\n\n    propTypes = {\n        email: propTypes.string,\n        getApplicantData: propTypes.func.isRequired,\n        updateApplicantData: propTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps){\n        const { applicantData } = this.props;\n        if(applicantData !== prevProps.applicantData){\n            this.setState({\n                name: this.props.applicantData.name,\n                email: this.props.applicantData.email,\n                skills: this.props.applicantData.skills,\n                education: this.props.applicantData.education\n            })\n        }\n    }\n\n    componentDidMount(){\n        const user = {\n            email: this.props.email,\n        }\n        this.props.getApplicantData(user);\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    handleSkillListChange = (index, event) => {\n        var skills = this.state.skills.slice(); // Make a copy of the emails first.\n        skills[index] = event.target.value; // Update it with the modified email.\n        this.setState({skills: skills}); // Update the state.\n    }\n\n    handleEducationListChangeFirst = (index, event) => {\n        var education = this.state.education.slice(); // Make a copy of the emails first.\n        education[index][0] = event.target.value; // Update it with the modified email.\n        this.setState({education: education});\n    }\n\n    handleEducationListChangeSec = (index, event) => {\n        var education = this.state.education.slice(); // Make a copy of the emails first.\n        education[index][1] = event.target.value; // Update it with the modified email.\n        this.setState({education: education});\n    }\n    handleEducationListChangeThi = (index, event) => {\n        var education = this.state.education.slice(); // Make a copy of the emails first.\n        education[index][2] = event.target.value; // Update it with the modified email.\n        this.setState({education: education});\n    }\n\n    addNewSkill = () => {\n        this.setState({\n            skills: this.state.skills.concat('')\n        })\n    }\n\n    addNewEducation = () => {\n        this.setState({\n            education: this.state.education.concat([['','','']])\n        })\n    }\n\n    deleteSkill = (name) => {\n        this.setState({\n            skills: this.state.skills.filter(function(person) { \n            return person !== name \n        })});\n    }\n\n    deleteEducation = (name) => {\n        this.setState({\n            education: this.state.education.filter(function(person) { \n            return person !== name \n        })});\n    }\n\n    updateApplicantData = () => {\n        var updatedData = {\n            _id: this.props.applicantData._id,\n            name: this.state.name,\n            skills: this.state.skills,\n            email: this.state.email,\n            education: this.state.education,\n            rating: this.props.applicantData.rating,\n            total_ratings: this.props.applicantData.total_ratings\n        }\n        this.props.updateApplicantData(updatedData)\n    }\n\n    render() {\n        return (\n            <div className = \"box\">\n                <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\n                    <Form>\n                    <FormGroup>\n                        <Label>Name:</Label>\n                        <h2>{this.state.name}</h2>\n                        <Label>Email:</Label>\n                        <h2>{this.state.email}</h2>\n                        <Label>Skills:</Label>\n                        { this.state.skills != null ? this.state.skills.map((name, index) => (\n                            <div key={index} className=\"input-group\">\n                                <Button className= \"remove-btn\" color=\"danger\" size=\"sm\" onClick = {this.deleteSkill.bind(this, name)}>&times;</Button>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    onChange={this.handleSkillListChange.bind(this, index)} value={name}/>\n                            </div>\n                        ))\n                        : null}\n                        <Button block onClick={this.addNewSkill}>Add skill</Button>\n                        <Label>Education:</Label>\n                        { this.state.education != null ? this.state.education.map((edu, index) => (\n                            <div key={index} className=\"input-group\">\n                                <Button className= \"remove-btn\" color=\"danger\" size=\"sm\" onClick = {this.deleteEducation.bind(this, edu)}>&times;</Button>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    onChange={this.handleEducationListChangeFirst.bind(this.target, index)} value={edu[0]}/>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    onChange={this.handleEducationListChangeSec.bind(this.target, index)} value={edu[1]}/>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    onChange={this.handleEducationListChangeThi.bind(this.target, index)} value={edu[2]}/>\n                            </div>\n                        ))\n                        : null}\n                        <Button block onClick={this.addNewEducation}>Add Education</Button>\n                        <Button block onClick={this.updateApplicantData}>Submit</Button>\n                        </FormGroup>\n                    </Form>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    email: state.auth.email,\n    applicantData: state.applicantDataReducer.applicantData\n})\n\nexport default connect(mapStateToProps, { getApplicantData, updateApplicantData })(ApplicantEdit);\n","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/actions/applicantActions.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/addJob.js",["142","143"],"import { Component } from \"react\";\nimport '../../App.css'\nimport { Link, Redirect } from 'react-router-dom'\nimport { Button, Form, FormGroup, Label, ListGroupItem} from 'reactstrap';\nimport axios from 'axios'\n\n\nclass AddJob extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            redirect: null,\n            title: '',\n            name: localStorage.getItem('name'),\n            email: localStorage.getItem('email'),\n            application_no: 0,\n            positions_no: 0,\n            deadline: null,\n            required_skill: [''],\n            type: 'Full-time',\n            duration: null,\n            salary: null,\n        }\n    }\n    handleSkillListChange = (index, event) => {\n        var required_skill = this.state.required_skill.slice(); // Make a copy of the emails first.\n        required_skill[index] = event.target.value; // Update it with the modified email.\n        this.setState({required_skill: required_skill}); // Update the state.\n    }\n    addNewSkill = () => {\n        this.setState({\n            required_skill: this.state.required_skill.concat('')\n        })\n    }\n    deleteSkill = (name) => {\n        this.setState({\n            required_skill: this.state.required_skill.filter(function(person) { \n            return person !== name \n        })});\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    \n    addJob = () => {\n        var updatedData = {\n            title: this.state.title,\n            name: this.state.name,\n            required_skill: this.state.required_skill,\n            email: this.state.email,\n            application_no: this.state.application_no,\n            positions_no: this.state.positions_no,\n            deadline: this.state.deadline,\n            type: this.state.type,\n            duration: this.state.duration,\n            salary: this.state.salary\n        }\n        const { title, name, email, application_no, positions_no, deadline, required_skill, type, duration, salary } = updatedData\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const body = JSON.stringify({ title, name, email, application_no, positions_no, deadline, required_skill, type, duration, salary } )\n        console.log(`${body}`)\n        axios.post('/api/jobspost/', body, config)\n            .then( res => ({\n            })   \n            )\n            .catch(err => {\n                console.log(err.response);\n                alert('An error occurred! Try submitting the form again.');\n            });\n        this.setState({\n            redirect: \"/\"\n        })\n    }\n    \n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={this.state.redirect} />\n        }\n        return (\n            <div className = \"box\">\n                <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\n                    <Form>\n                        <FormGroup>\n                            <Label>Title:</Label>\n                            <input className=\"form-control\" type=\"title\" name=\"title\" id=\"title\" placeholder=\"Title\" onChange={this.onChange}></input>\n                            <Label>Name:</Label>\n                            <h2>{this.state.name}</h2>\n                            <Label>Email:</Label>\n                            <h2>{this.state.email}</h2>\n                            <Label>Max Applications:</Label>\n                            <input className=\"form-control\" type=\"number\" name=\"application_no\" id=\"application_no\" placeholder=\"Number of Application\" onChange={this.onChange}></input>\n                            <Label>Max positions:</Label>\n                            <input className=\"form-control\" type=\"number\" name=\"positions_no\" id=\"positions_no\" placeholder=\"Number of Positions\" onChange={this.onChange}></input>\n                            <Label>Deadline</Label>\n                            <input className=\"form-control\" type=\"date\" name=\"deadline\" id=\"deadline\" placeholder=\"Deadline of Application\" onChange={this.onChange}></input>\n                            <Label>Required Skills:</Label>\n                            { this.state.required_skill != null ? this.state.required_skill.map((name, index) => (\n                                <div key={index} className=\"input-group\">\n                                    <Button className= \"remove-btn\" color=\"danger\" size=\"sm\" onClick = {this.deleteSkill.bind(this, name)}>&times;</Button>\n                                    <input type=\"text\"\n                                        className=\"form-control\"\n                                        onChange={this.handleSkillListChange.bind(this, index)} value={name}/>\n                                </div>\n                            ))\n                            : null}\n                            <Button block onClick={this.addNewSkill}>Add skill</Button>\n                            <Label>Type of Job</Label><br/>\n                            <select name=\"type\" onChange={this.onChange} >\n                                <option value=\"Full-time\" selected >Full-time</option>\n                                <option value=\"Part-time\" >Part-time</option>\n                                <option value=\"Work-from-home\" >Work from Home</option>\n                            </select><br/>\n                            <Label>Duration</Label>\n                            <input className=\"form-control\" type=\"number\" name=\"duration\" id=\"duration\" placeholder=\"Duration\" onChange={this.onChange}></input>\n                            <Label>Salary</Label>\n                            <input className=\"form-control\" type=\"number\" name=\"salary\" id=\"salary\" placeholder=\"Salary in Rupees\" onChange={this.onChange}></input>\n                            <Button block onClick={this.addJob}>Submit</Button>\n                        </FormGroup>\n                    </Form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddJob","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/viewJob.js",["144","145","146","147"],"import { Component } from \"react\";\nimport '../../App.css'\nimport { Link } from 'react-router-dom'\nimport { Button, Label, Form, FormGroup, ListGroupItem, ListGroup } from 'reactstrap'\nimport axios from 'axios'\nimport moment from 'moment'\nimport Moment from 'react-moment'\nimport EditJobModal from './editJobModal'\n\nclass ViewJobs extends Component {\n\n    constructor(props){\n        super(props);\n        this.refresh = this.refresh.bind(this)\n        this.state = {\n            email: localStorage.getItem('email'),\n            jobs: null,\n            now: Date(),\n            isEditing: false,\n            editingIndex: null\n        }\n    }\n\n\n    componentDidMount (){\n        const user = {\n            email: this.state.email,\n        }\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const {email} = user\n        const body = JSON.stringify({email})\n        axios.post('/api/viewJobs/getJobs/', body, config)\n            .then( res => {\n                this.setState({\n                    jobs: res.data.jobs,\n                    }\n                )\n            })\n            .catch(err => {\n                console.log(err.response);\n                alert('An error occurred! Try submitting the form again.');\n            });\n    }\n    refresh = () => {\n        this.setState({\n            isEditing: false\n        })\n    }\n    editJob = (index, e) => {\n        console.log(`${JSON.stringify(index)}`)\n        this.setState({\n            isEditing: !this.state.isEditing,\n            editingIndex: index\n        })\n    }\n\n    // onChange = (e) => {\n    //     this.setState({ [e.target.name]: e.target.value });\n    // }\n\n    // updateData = () => {\n    //     var updatedData = {\n    //         _id: this.state._id,\n    //         name: this.state.name,\n    //         email: this.state.email,\n    //         bio: this.state.bio,\n    //         contact_number: this.state.contact_number\n    //     }\n    //     const { _id, name, email, bio, contact_number } = updatedData\n    //     const config = {\n    //         headers: {\n    //             'Content-Type': 'application/json'\n    //         }\n    //     }\n    //     const body = JSON.stringify({ _id ,name, email, bio, contact_number})\n    //     console.log(`${body}`)\n    //     axios.post('/api/recruiterProfile/update', body, config)\n    //         .then( res => {\n    //             console.log(`${res.data}`)\n    //         })\n    //         .catch( err => {\n    //             console.log(`${err}`)\n    //         })\n    // }\n\n    render() {\n        return (\n            <div className = \"box\">\n                {/* <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\n                    <h1 style={{ color:'white'}}>Welcome Recruiter</h1>\n                </div> */}\n                <div style={{marginTop:\"30px\"}}>\n                    <center>\n                        <Form>\n                            { this.state.jobs != null ? this.state.jobs.map((job, index) =>\n                                // { return moment(job.deadline, 'YYYY-MM-DDTHH:mm:ss.SSSZ').isValid && moment().isBefore(moment(job.deadline, 'YYYY-MM-DDTHH:mm:ss.SSSZ')) ? \n                                <div style={{ backgroundColor:'white', marginBottom:'20px', padding:'10px', width:'40%' }}>\n                                    <Form>\n                                        <Label>Title: {job.title}</Label><br/>\n                                        <Label>Date of Posting: <Moment format=\"YYYY-MM-DD\">{job.date_of_posting}</Moment></Label><br/>\n                                        <Label>Number of Applicants: {job.pending_applicants.length}</Label><br/>\n                                        <Label>Remaining Positions: {job.positions_no - job.accepted_applicants.length}</Label>\n                                    </Form>\n                                    <Link to={{pathname:'/recruiterApplication', state: {job: job}}}>\n                                        <Button style={{marginRight:'20px'}}>View Applications</Button>\n                                    </Link>\n                                    <Button onClick={this.editJob.bind(this, index)}>Edit</Button>\n                                    { this.state.isEditing && index===this.state.editingIndex ? <EditJobModal job = {job} parentRefresh={this.refresh}/> : null}\n                                </div>\n                            ) : null }\n                        </Form>\n                    </center>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ViewJobs","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/editJobModal.js",["148","149"],"import React, { Component } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap';\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport axios from 'axios'\n\n\nclass EditJobModal extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: localStorage.getItem('email'),\n            job: props.job,\n            modal: true,\n            application_no: this.props.job.application_no,\n            positions_no: this.props.job.positions_no,\n            deadline: this.props.job.deadline,\n            redirect: null\n        }\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit = async(e) => {\n        e.preventDefault()\n\n        const update = { application_no: this.state.application_no, positions_no:this.state.positions_no, deadline:this.state.deadline };\n        const togeather = { _id: this.state.job._id, update: update }\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const body = JSON.stringify({ togeather })\n        console.log(`${body}`)\n        await axios.post('/api/viewJobs/editJob/', body, config)\n            .then( res => {\n                console.log(\"successfully updated\")\n            })\n            .catch(err => {\n                console.log(err.response);\n                alert('An error occurred! Try submitting the form again.');\n            });\n        this.setState({\n            redirect: '/'\n        })\n    }\n\n    render(){\n        if (this.state.redirect) {\n            return <Redirect to={this.state.redirect} />\n        }\n        return (\n            <div>\n                <Modal\n                    centered = {true}\n                    isOpen = {this.state.modal}\n                    toggle = {this.toggle}>\n                    <ModalHeader toggl={this.toggle}>Update Job</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.onSubmit}>\n                            <FormGroup>\n                                <Label style={{marginBottom: '0.5rem'}}>\n                                    Maximum number of applications:\n                                </Label>\n                                <Input style={{marginBottom: '1rem'}} type=\"number\" name=\"application_no\" id=\"application_no\" value={this.state.application_no} onChange={this.onChange}>\n                                </Input>\n                                <Label style={{marginBottom: '0.5rem'}}>\n                                    Maximum number of positions:\n                                </Label>\n                                <Input style={{marginBottom: '1rem'}} type=\"number\" name=\"positions_no\" id=\"positions_no\" value={this.state.positions_no} onChange={this.onChange}>\n                                </Input>\n                                <Label style={{marginBottom: '0.5rem'}}>\n                                    Deadline for application:\n                                </Label>\n                                <Input style={{marginBottom: '1rem'}} type=\"date\" name=\"deadline\" id=\"deadline\" value={moment(this.state.deadline).format(\"YYYY-MM-DD\")} onChange={this.onChange}></Input>\n                                <Button color=\"dark\" style={{marginTop: '2rem'}} block>Update</Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\n\nexport default EditJobModal","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/addSopApply.js",["150","151","152","153","154","155","156","157"],"import axios from \"axios\";\nimport { Component, useState } from \"react\";\nimport { Button, Label, ListGroup, ListGroupItem, Form } from \"reactstrap\";\nimport '../../App.css'\nimport { Link, Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nfunction AddSopApply(props){\n    const [job, setJob] = useState(props.job);\n    const [Sop, setSop] = useState('');\n    const [application_ID, setApplication_id] = useState(null);\n    const [redirect, setRedirect] = useState(null);\n\n    const applyForJob = async () => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        console.log(`${job.title}`)\n        const jobapplication = {\n            job_id: job._id,\n            job_title: job.title,\n            applicant_name: localStorage.getItem('name'),\n            applicant_email: localStorage.getItem('email'),\n            recruiter_name: job.name,\n            recruiter_email: job.email,\n            sop: Sop,\n            status: 'Applied'\n        }\n        var idOfTheApplication\n        const { job_id ,job_title ,applicant_name ,applicant_email ,recruiter_name ,recruiter_email , date_of_posting, sop, status } = jobapplication\n        var body = JSON.stringify({job_id ,job_title ,applicant_name ,applicant_email ,recruiter_name ,recruiter_email , date_of_posting, sop, status})\n        await axios.post('/api/applicantJob/postApplication/', body, config)\n            .then( res=> {\n                setApplication_id(res.data.applicationData._id)\n                idOfTheApplication = res.data.applicationData._id\n                console.log(`${application_ID}`)\n            } )\n            .catch( err=> {\n                console.log(`${err}`)\n            })\n        var job_applicants = job.pending_applicants;\n        job_applicants = job_applicants.concat([[ idOfTheApplication ,localStorage.getItem('email'), localStorage.getItem('name')]])\n        const update = { pending_applicants: job_applicants }\n        const together = { _id: job._id, update: update }\n        body =  JSON.stringify({together})\n        await axios.post('api/applicantJob/updateJobData/', body, config)\n            .then( res => {\n                console.log(`${res.data.updatedJob}`)\n            } )\n            .catch(\n                err => {\n                    console.log(`${err}`)\n                }\n            )\n        await props.reload()\n    }\n\n    const handleSopChange = (e) => {\n        setSop(e.target.value);\n    }\n\n    if(redirect){\n        return <Redirect to={redirect} />\n    }\n    console.log('lollmaolol')\n    return (\n            <div className = \"box\">\n                <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\n                    <Form>\n                        <h3>Applying for {job.title} at {job.name}</h3>\n                        <br/><br/>\n                        <h3>Enter Sop:</h3>\n                        <textarea class=\"form-control\" type=\"textarea\" \n                            onChange={handleSopChange}\n                            /><br/>\n                        <center>\n                            <Button style={{backgroundColor: \"green\", marginRight:'100px'}} onClick={applyForJob}>Apply</Button>\n                            <Button style={{backgroundColor: \"red\"}} onClick={props.reload}>Cancel</Button>\n                        </center>\n                    </Form>\n                </div>\n            </div>\n        )\n}\n\n// class AddSopApply extends Component {\n\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             job: this.props.location.state.job,\n//             sop: '',\n//             jobApplicationID: null,\n//             redirect: null\n//         }\n//     }\n\n//     applyForJob = async () => {\n//         const config = {\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             }\n//         }\n//         const jobapplication = {\n//             job_id: this.state.job._id,\n//             job_title: this.state.job.title,\n//             applicant_name: localStorage.getItem('name'),\n//             applicant_email: localStorage.getItem('email'),\n//             recruiter_name: this.state.job.name,\n//             recruiter_email: this.state.job.email,\n//             sop: this.state.sop,\n//             status: 'Applied'\n//         }\n//         const { job_id ,job_title ,applicant_name ,applicant_email ,recruiter_name ,recruiter_email , date_of_posting, sop, status } = jobapplication\n//         var body = JSON.stringify({job_id ,job_title ,applicant_name ,applicant_email ,recruiter_name ,recruiter_email , date_of_posting, sop, status})\n//         await axios.post('/api/applicantJob/postApplication/', body, config)\n//             .then( res=> {\n//                 this.setState({\n//                     jobApplicationID: res.data.applicationData._id\n//                 })\n//             } )\n//             .catch( err=> {\n//                 console.log(`${err}`)\n//             })\n//         var job_applicants = this.state.job.pending_applicants;\n//         job_applicants = job_applicants.concat([[ this.state.jobApplicationID ,localStorage.getItem('email'), localStorage.getItem('name')]])\n//         const update = { pending_applicants: job_applicants }\n//         const together = { _id: this.state.job._id, update: update }\n//         body =  JSON.stringify({together})\n//         await axios.post('api/applicantJob/updateJobData/', body, config)\n//             .then( res => {\n//                 console.log(`${res.data.updatedJob}`)\n//             } )\n//             .catch(\n//                 err => {\n//                     console.log(`${err}`)\n//                 }\n//             )\n//         this.setState({\n//             redirect: '/'\n//         })\n//     }\n\n//     onChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//     }\n\n//     render() {\n//         if (this.state.redirect) {\n//             return <Redirect to={this.state.redirect} />\n//         }\n//         return (\n//             <div className = \"box\">\n//                 <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\n//                     <Form>\n//                         <h3>Applying for {this.state.job.title} at {this.state.job.name}</h3>\n//                         <br/><br/>\n//                         <h3>Enter Sop:</h3>\n//                         <textarea class=\"form-control\" type=\"textarea\" \n//                             name=\"sop\" id=\"sop\"\n//                             onChange={this.onChange\n//                             }\n//                             value={this.state.sop}\n//                             /><br/>\n//                         <Button style={{backgroundColor: \"green\"}} onClick={this.applyForJob}>Apply</Button>\n//                     </Form>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\nexport default AddSopApply","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/myApplications.js",["158","159","160","161"],"import { Component, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction MyApplication (props){\n    const [ myApplications, setMyApplications ] = useState(props.location.state.applications)\n    const [ allJobs, setAllJobs ] = useState(props.location.state.jobs)\n\n    useEffect(() => {\n        \n    }, []);\n\n    \n    return (\n        <div class=\"box\">\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\n                <center>\n                    <table>\n                        <tr>\n                            <th>Title</th>\n                            <th>Date of Joining</th>\n                            <th>Salary per Month</th>\n                            <th>Name of Recruiter</th>\n                            <th>Status</th>\n                        </tr>\n                        { myApplications!=null \n                            ?  myApplications.map((application, index) => {\n                                return allJobs!= null\n                                    ? allJobs.map((job, jobIndex) => {\n                                        return application.job_id === job._id \n                                        ?  <tr>\n                                            <td>{application.job_title}</td>\n                                            <td>{application.status === \"Accepted\" ? application.date_of_posting : 'Not Available'}</td>\n                                            <td>{job.salary}</td>\n                                            <td>{application.recruiter_name}</td>\n                                            <td>{application.status}</td>\n                                        </tr>\n                                        : null\n                                    })\n                                    : null\n                            })\n                            : null }\n                    </table>\n                </center>\n            </div>\n        </div>\n    )\n}\n\nexport default MyApplication","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/recruiterApplicationView.js",["162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184"],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":9,"column":35,"nodeType":"191","messageId":"192","endLine":9,"endColumn":41},{"ruleId":"193","severity":1,"message":"194","line":9,"column":1,"nodeType":"195","endLine":28,"endColumn":2},{"ruleId":"193","severity":1,"message":"194","line":12,"column":1,"nodeType":"195","endLine":60,"endColumn":2},{"ruleId":"189","severity":1,"message":"196","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":25},{"ruleId":"189","severity":1,"message":"197","line":7,"column":5,"nodeType":"191","messageId":"192","endLine":7,"endColumn":15},{"ruleId":"189","severity":1,"message":"198","line":9,"column":5,"nodeType":"191","messageId":"192","endLine":9,"endColumn":12},{"ruleId":"199","severity":1,"message":"200","line":77,"column":17,"nodeType":"201","messageId":"202","endLine":77,"endColumn":19},{"ruleId":"189","severity":1,"message":"203","line":15,"column":34,"nodeType":"191","messageId":"192","endLine":15,"endColumn":38},{"ruleId":"189","severity":1,"message":"204","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":19},{"ruleId":"189","severity":1,"message":"205","line":3,"column":18,"nodeType":"191","messageId":"192","endLine":3,"endColumn":27},{"ruleId":"189","severity":1,"message":"206","line":3,"column":29,"nodeType":"191","messageId":"192","endLine":3,"endColumn":42},{"ruleId":"207","severity":1,"message":"208","line":235,"column":45,"nodeType":"209","messageId":"210","endLine":271,"endColumn":46},{"ruleId":"199","severity":1,"message":"211","line":240,"column":106,"nodeType":"201","messageId":"202","endLine":240,"endColumn":108},{"ruleId":"199","severity":1,"message":"211","line":240,"column":133,"nodeType":"201","messageId":"202","endLine":240,"endColumn":135},{"ruleId":"199","severity":1,"message":"211","line":244,"column":92,"nodeType":"201","messageId":"202","endLine":244,"endColumn":94},{"ruleId":"199","severity":1,"message":"211","line":256,"column":88,"nodeType":"201","messageId":"202","endLine":256,"endColumn":90},{"ruleId":"193","severity":1,"message":"194","line":9,"column":1,"nodeType":"195","endLine":54,"endColumn":2},{"ruleId":"189","severity":1,"message":"206","line":6,"column":42,"nodeType":"191","messageId":"192","endLine":6,"endColumn":55},{"ruleId":"189","severity":1,"message":"196","line":7,"column":10,"nodeType":"191","messageId":"192","endLine":7,"endColumn":25},{"ruleId":"189","severity":1,"message":"212","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":14},{"ruleId":"189","severity":1,"message":"206","line":4,"column":42,"nodeType":"191","messageId":"192","endLine":4,"endColumn":55},{"ruleId":"189","severity":1,"message":"213","line":4,"column":31,"nodeType":"191","messageId":"192","endLine":4,"endColumn":40},{"ruleId":"189","severity":1,"message":"206","line":4,"column":42,"nodeType":"191","messageId":"192","endLine":4,"endColumn":55},{"ruleId":"189","severity":1,"message":"205","line":4,"column":57,"nodeType":"191","messageId":"192","endLine":4,"endColumn":66},{"ruleId":"189","severity":1,"message":"214","line":6,"column":8,"nodeType":"191","messageId":"192","endLine":6,"endColumn":14},{"ruleId":"189","severity":1,"message":"198","line":11,"column":5,"nodeType":"191","messageId":"192","endLine":11,"endColumn":12},{"ruleId":"189","severity":1,"message":"215","line":12,"column":5,"nodeType":"191","messageId":"192","endLine":12,"endColumn":10},{"ruleId":"189","severity":1,"message":"204","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":19},{"ruleId":"189","severity":1,"message":"216","line":3,"column":18,"nodeType":"191","messageId":"192","endLine":3,"endColumn":23},{"ruleId":"189","severity":1,"message":"205","line":3,"column":25,"nodeType":"191","messageId":"192","endLine":3,"endColumn":34},{"ruleId":"189","severity":1,"message":"206","line":3,"column":36,"nodeType":"191","messageId":"192","endLine":3,"endColumn":49},{"ruleId":"189","severity":1,"message":"212","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":14},{"ruleId":"189","severity":1,"message":"214","line":6,"column":8,"nodeType":"191","messageId":"192","endLine":6,"endColumn":14},{"ruleId":"189","severity":1,"message":"217","line":9,"column":17,"nodeType":"191","messageId":"192","endLine":9,"endColumn":23},{"ruleId":"189","severity":1,"message":"218","line":12,"column":22,"nodeType":"191","messageId":"192","endLine":12,"endColumn":33},{"ruleId":"189","severity":1,"message":"204","line":1,"column":10,"nodeType":"191","messageId":"192","endLine":1,"endColumn":19},{"ruleId":"189","severity":1,"message":"219","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":13},{"ruleId":"189","severity":1,"message":"220","line":5,"column":29,"nodeType":"191","messageId":"192","endLine":5,"endColumn":46},{"ruleId":"189","severity":1,"message":"221","line":6,"column":22,"nodeType":"191","messageId":"192","endLine":6,"endColumn":32},{"ruleId":"189","severity":1,"message":"204","line":1,"column":10,"nodeType":"191","messageId":"192","endLine":1,"endColumn":19},{"ruleId":"189","severity":1,"message":"205","line":3,"column":25,"nodeType":"191","messageId":"192","endLine":3,"endColumn":34},{"ruleId":"189","severity":1,"message":"206","line":3,"column":36,"nodeType":"191","messageId":"192","endLine":3,"endColumn":49},{"ruleId":"189","severity":1,"message":"217","line":7,"column":18,"nodeType":"191","messageId":"192","endLine":7,"endColumn":24},{"ruleId":"189","severity":1,"message":"222","line":9,"column":13,"nodeType":"191","messageId":"192","endLine":9,"endColumn":35},{"ruleId":"223","severity":1,"message":"224","line":14,"column":16,"nodeType":"225","endLine":37,"endColumn":6},{"ruleId":"223","severity":1,"message":"226","line":37,"column":8,"nodeType":"227","endLine":37,"endColumn":10,"suggestions":"228"},{"ruleId":"199","severity":1,"message":"200","line":50,"column":69,"nodeType":"201","messageId":"202","endLine":50,"endColumn":71},{"ruleId":"199","severity":1,"message":"200","line":51,"column":69,"nodeType":"201","messageId":"202","endLine":51,"endColumn":71},{"ruleId":"199","severity":1,"message":"211","line":89,"column":18,"nodeType":"201","messageId":"202","endLine":89,"endColumn":20},{"ruleId":"199","severity":1,"message":"211","line":115,"column":18,"nodeType":"201","messageId":"202","endLine":115,"endColumn":20},{"ruleId":"199","severity":1,"message":"211","line":131,"column":22,"nodeType":"201","messageId":"202","endLine":131,"endColumn":24},{"ruleId":"199","severity":1,"message":"211","line":167,"column":41,"nodeType":"201","messageId":"202","endLine":167,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":172,"column":27,"nodeType":"225","messageId":"231","endLine":174,"endColumn":22},{"ruleId":"199","severity":1,"message":"211","line":182,"column":18,"nodeType":"201","messageId":"202","endLine":182,"endColumn":20},{"ruleId":"232","severity":1,"message":"233","line":189,"column":17,"nodeType":"191","messageId":"234","endLine":189,"endColumn":18},{"ruleId":"199","severity":1,"message":"211","line":191,"column":130,"nodeType":"201","messageId":"202","endLine":191,"endColumn":132},{"ruleId":"199","severity":1,"message":"211","line":234,"column":18,"nodeType":"201","messageId":"202","endLine":234,"endColumn":20},{"ruleId":"199","severity":1,"message":"211","line":261,"column":115,"nodeType":"201","messageId":"202","endLine":261,"endColumn":117},{"ruleId":"199","severity":1,"message":"211","line":266,"column":141,"nodeType":"201","messageId":"202","endLine":266,"endColumn":143},{"ruleId":"199","severity":1,"message":"211","line":276,"column":64,"nodeType":"201","messageId":"202","endLine":276,"endColumn":66},{"ruleId":"199","severity":1,"message":"211","line":279,"column":64,"nodeType":"201","messageId":"202","endLine":279,"endColumn":66},{"ruleId":"199","severity":1,"message":"211","line":282,"column":64,"nodeType":"201","messageId":"202","endLine":282,"endColumn":66},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'combineReducers' is defined but never used.","'AUTH_ERROR' is defined but never used.","'NavLink' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user' is assigned a value but never used.","'Component' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Expected '!==' and instead saw '!='.","'Link' is defined but never used.","'FormGroup' is defined but never used.","'moment' is defined but never used.","'Alert' is defined but never used.","'Label' is defined but never used.","'setJob' is assigned a value but never used.","'setRedirect' is assigned a value but never used.","'axios' is defined but never used.","'setMyApplications' is assigned a value but never used.","'setAllJobs' is assigned a value but never used.","'jobApplicationsDefault' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'job._id'. Either include it or remove the dependency array.","ArrayExpression",["237"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'jobData'.","unsafeRefs","no-redeclare","'i' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},"Update the dependencies array to be: [job._id]",{"range":"240","text":"241"},[1438,1440],"[job._id]"]