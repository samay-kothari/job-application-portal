[{"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/index.js":"1","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/App.js":"2","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reportWebVitals.js":"3","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/store.js":"4","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reducers/index.js":"5","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reducers/errorReducer.js":"6","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/actions/types.js":"7","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reducers/authReducer.js":"8","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/actions/authActions.js":"9","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/actions/errorActions.js":"10","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/AppNavbar.js":"11","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/auth/register.js":"12","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/auth/logout.js":"13","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/auth/loginModal.js":"14","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/landingPage.js":"15","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/recruiterVisit.js":"16","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/applicantVisit.js":"17","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reducers/applicantReducer.js":"18","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/applicantEdit.js":"19","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/actions/applicantActions.js":"20"},{"size":478,"mtime":1610291630075,"results":"21","hashOfConfig":"22"},{"size":901,"mtime":1610441445344,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1610291094998,"results":"24","hashOfConfig":"22"},{"size":402,"mtime":1610291712954,"results":"25","hashOfConfig":"22"},{"size":305,"mtime":1610430180513,"results":"26","hashOfConfig":"22"},{"size":614,"mtime":1610292925250,"results":"27","hashOfConfig":"22"},{"size":826,"mtime":1610528046704,"results":"28","hashOfConfig":"22"},{"size":1814,"mtime":1610429273044,"results":"29","hashOfConfig":"22"},{"size":2168,"mtime":1610443483730,"results":"30","hashOfConfig":"22"},{"size":277,"mtime":1610296334033,"results":"31","hashOfConfig":"22"},{"size":2528,"mtime":1610441870621,"results":"32","hashOfConfig":"22"},{"size":4619,"mtime":1610530306207,"results":"33","hashOfConfig":"22"},{"size":551,"mtime":1610516791583,"results":"34","hashOfConfig":"22"},{"size":3432,"mtime":1610395299709,"results":"35","hashOfConfig":"22"},{"size":924,"mtime":1610427314153,"results":"36","hashOfConfig":"22"},{"size":442,"mtime":1610394486281,"results":"37","hashOfConfig":"22"},{"size":442,"mtime":1610393465993,"results":"38","hashOfConfig":"22"},{"size":1439,"mtime":1610529788817,"results":"39","hashOfConfig":"22"},{"size":6712,"mtime":1610530704601,"results":"40","hashOfConfig":"22"},{"size":2052,"mtime":1610530367298,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"5eunxj",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/index.js",[],["93","94"],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/App.js",["95"],"import './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/authActions'\nimport { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport AppNavbar from './components/AppNavbar'\nimport LandingPage from './components/screens/landingPage'\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport ApplicantEdit from './components/screens/applicantEdit'\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n  }\n\n  render() {\n    return (\n      <Router>\n        <Provider store = { store }>\n          <div className=\"App\">\n              <Route path=\"/\" component={LandingPage}/>\n              <Route path=\"/applicantEdit\" component={ApplicantEdit}/>\n            <AppNavbar/>\n          </div>\n        </Provider>\n      </Router>\n    );\n  }\n}\n\nexport default App;","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reportWebVitals.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/store.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reducers/index.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reducers/errorReducer.js",["96"],"import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types'\n\nconst initialState = {\n    msg: {},\n    status: null,\n    id: null\n}\n\nexport default function ( state = initialState, action){\n    switch(action.type){\n        case GET_ERRORS:\n            return {\n                msg: action.payload.msg,\n                status: action.payload.status,\n                id: action.payload.id\n            }\n        case CLEAR_ERRORS: {\n            return{\n                msg: {},\n                status: null,\n                id: null\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/actions/types.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reducers/authReducer.js",["97"],"import { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL } from '../actions/types'\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null,\n    role: localStorage.getItem('role'),\n    email: localStorage.getItem('email')\n};\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case USER_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n            }\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload,\n                role: action.payload.user.role,\n                email: action.payload.user.email\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', action.payload.token);\n            localStorage.setItem('role', action.payload.user.role);\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                isLoading: false,\n                role: action.payload.user.role,\n                email: action.payload.user.email\n            }\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT_SUCCESS:\n        case REGISTER_FAIL:\n            localStorage.removeItem('token');\n            localStorage.removeItem('role')\n            return {\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false,\n                role: null,\n                email: null\n            }\n        default:\n            return state;\n    }\n}",["98","99"],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/actions/authActions.js",["100","101"],"import axios from 'axios';\nimport { combineReducers } from 'redux';\nimport { returnErrors } from './errorActions';\nimport {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL, \n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL\n} from './types';\n\nexport const loadUser = () => (dispatch, getState) => {\n    dispatch({ type: USER_LOADING });\n\n    axios.get('/api/auth/user', tokenConfig(getState))\n        .then(res => dispatch ({\n            type: USER_LOADED,\n            payload: res.data\n        }))\n}\n\nexport const register = ({ name, email, password, role }) => dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ name, email, role, password });\n    axios.post('/api/users', body, config)\n        .then(res => dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        }))\n        .catch( err => {\n            dispatch( returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL') );\n            dispatch({\n                type: REGISTER_FAIL,\n            })\n        })\n}\n\nexport const login = ({ email, password}) => dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ email, password });\n    axios.post('/api/auth', body, config)\n        .then(res => dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        }))\n        .catch( err => {\n            dispatch( returnErrors(err.response.data , err.response.status, 'LOGIN_FAIL') );\n            dispatch({\n                type: LOGIN_FAIL,\n            })\n        })\n}\n\n\nexport const logout = () => {\n    return {\n        type: LOGOUT_SUCCESS\n    }\n}\n\nexport const tokenConfig = (getState) => {\n    // getting the token\n    const token = getState().auth.token;\n\n    // Headers\n    const config = {\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    }\n\n    // If token then adding to headers\n    if(token) {\n        config.headers['x-auth-token'] = token;\n    }\n\n    return config\n}\n\n","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/actions/errorActions.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/AppNavbar.js",["102"],"import React, {Component, Fragment} from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Container\n} from 'reactstrap';\nimport RegisterModal from './auth/register'\nimport Logout from './auth/logout';\nimport LoginModal from './auth/loginModal'\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\n\n\nclass AppNavbar extends Component {\n\n    static propTypes = {\n        auth: propTypes.object.isRequired\n    }\n    state = {\n        isOpen: false\n    }\n\n    toggle = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n\n    render() {\n        const { isAuthenticated, user, role } = this.props.auth;\n        const authLinks = (\n            <Fragment>\n                <span className=\"navbar-text mr-3\" style={{ color: \"violet\" }}>\n                    <strong>{ user ? `Welcome ${user.name}` : ''}</strong>\n                </span>\n                { role === \"Applicant\" ? \n                <Link to=\"/applicantEdit\">\n                    <span className=\"navbar-text mr-3\" style={{ color: \"violet\" }}>\n                        <strong>Account</strong>\n                    </span>\n                </Link> : null}\n                <NavItem>\n                    <Logout/>\n                </NavItem>\n            </Fragment>\n        )\n\n        const guestLinks = (\n            <Fragment>\n                <NavItem>\n                    <RegisterModal/>\n                </NavItem>\n                <NavItem>\n                    <LoginModal/>\n                </NavItem>\n            </Fragment>\n        )\n\n        return (\n            <div>\n                <Navbar color = \"dark\" dark expand=\"sm\" className=\"mb-5\">\n                    <Container>\n                        <Link to=\"/\">\n                            <NavbarBrand href=\"/\">JOB APPLICATION PORTAL</NavbarBrand>\n                        </Link>\n                        <NavbarToggler onClick={this.toggle}></NavbarToggler>\n                        <Collapse isOpen={this.state.isOpen} navbar>\n                            <Nav className=\"ml-auto\" navbar>\n                                { isAuthenticated ?  authLinks : guestLinks }\n                            </Nav>\n                        </Collapse>\n                    </Container>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n})\n\nexport default connect( mapStateToProps, null)(AppNavbar)","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/auth/register.js",["103"],"import React, { Component } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {register} from '../../actions/authActions';\nimport { clearErrors } from \"../../actions/errorActions\";\nimport { addApplicantData } from \"../../actions/applicantActions\"\n\nclass RegisterModal extends Component {\n    state = {\n        modal: false,\n        name: '',\n        password: '',\n        email: '',\n        role: 'Applicant',\n        msg: null,\n    }\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        register: PropTypes.func.isRequired,\n        clearErrors: PropTypes.func.isRequired,\n        addApplicantData: PropTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps){\n        const { error } = this.props;\n        if(error !== prevProps.error){\n            if(error.id === 'REGISTER_FAIL'){\n                this.setState({ msg: error.msg.msg });\n            } else {\n                this.setState( {msg: null} );\n            }\n        }\n\n        if(this.state.modal){\n            if(this.props.isAuthenticated){\n                this.toggle();\n            }\n        }\n    }\n\n    toggle = () => {\n        this.props.clearErrors();\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        const { name, email, password, role} = this.state;\n        const newUser = {\n            name,\n            email,\n            password,\n            role\n        };\n        this.props.register(newUser);\n        if(role == \"Applicant\"){\n            this.props.addApplicantData(newUser)\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <NavLink onClick={this.toggle} href='#'>\n                    Register\n                </NavLink> \n                <Modal\n                    centered = {true}\n                    isOpen = {this.state.modal}\n                    toggle = {this.toggle}>\n                    <ModalHeader toggl={this.toggle}>Register</ModalHeader>\n                    <ModalBody>\n                        { this.state.msg ? <Alert color=\"danger\">{this.state.msg}</Alert> : null }\n                        <Form onSubmit={this.onSubmit}>\n                            <FormGroup>\n                                <Label for=\"name\" style={{marginBottom: '0.5rem'}}>\n                                    Name:\n                                </Label>\n                                <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\" onChange={this.onChange} style= {{ marginBottom: '1rem' }}>\n                                </Input>\n\n                                <Label for=\"email\" style={{marginBottom: '0.5rem'}}>\n                                    Email:\n                                </Label>\n                                <Input style={{marginBottom: '1rem'}} type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" onChange={this.onChange}>\n                                </Input>\n\n                                <Label for=\"password\" style={{marginBottom: '0.5rem'}}>\n                                    Password:\n                                </Label>\n                                <Input style={{marginBottom: '1rem'}} type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" onChange={this.onChange}>\n                                </Input>\n                                <Label for=\"role\" style={{marginBottom: '0.5rem', marginRight:'1rem'}}>\n                                    Role:\n                                </Label>\n                                <select name=\"role\" onChange={this.onChange} >\n                                    <option value=\"Applicant\" selected >Applicant</option>\n                                    <option value=\"Recruiter\" >Recruiter</option>\n                                </select>\n                                <Button color=\"dark\" style={{marginTop: '2rem'}} block>Register</Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n})\n\nexport default connect(mapStateToProps, { register, clearErrors, addApplicantData })(RegisterModal);","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/auth/logout.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/auth/loginModal.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/landingPage.js",["104"],"import { Component } from \"react\";\nimport '../../App.css'\nimport ApplicantVisit from './applicantVisit'\nimport RecruiterVisit from './recruiterVisit'\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\n\n\nclass LandingPage extends Component {\n\n    static propTypes = {\n        auth: propTypes.object.isRequired\n    }\n    render() {\n        const { isAuthenticated, user, role } = this.props.auth;\n        return (\n            !isAuthenticated ? \n            <div className = \"box\">\n                <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\n                    <h1 style={{ color:'white'}}>Welcome.</h1>\n                </div>\n            </div> : role === \"Applicant\" ? <ApplicantVisit/> : <RecruiterVisit/>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n})\n\nexport default connect( mapStateToProps, null)(LandingPage)","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/recruiterVisit.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/applicantVisit.js",[],"/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/reducers/applicantReducer.js",["105"],"import { APPLICANT_DATA_LOADED, APPLICANT_DATA_LOADING, APPLICANT_DATA_POSTING, APPLICANT_DATA_POSTED, APPLICANT_DATA_INITIALISING, APPLICANT_DATA_INITIALISED } from '../actions/types'\n\nconst initialState = {\n    email : localStorage.getItem('email'),\n    isLoading: false,\n    applicantData: null\n}\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case APPLICANT_DATA_LOADING: {\n            return{\n                ...state,\n                isLoading: true\n            }\n        }\n        case APPLICANT_DATA_LOADED: {\n            return{\n                ...state,\n                isLoading: false,\n                applicantData: action.payload\n            }\n        }\n        case APPLICANT_DATA_POSTING: {\n            return{\n                ...state,\n                isLoading: true\n            }\n        }\n        case APPLICANT_DATA_POSTED: {\n            return{\n                ...state,\n                isLoading: false,\n                applicantData: action.payload\n            }\n        }\n        case APPLICANT_DATA_INITIALISING: {\n            return{\n                ...state,\n                isLoading: true\n            }\n        }\n        case APPLICANT_DATA_INITIALISED: {\n            return{\n                ...state,\n                applicantData: action.payload,\n                isLoading: false\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/components/screens/applicantEdit.js",["106","107"],"import { Component } from \"react\";\nimport '../../App.css';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux'\nimport { getApplicantData, updateApplicantData } from '../../actions/applicantActions'\nimport { Button, Form, FormGroup, Label, ListGroupItem} from 'reactstrap';\nimport { combineReducers } from \"redux\";\n\nclass ApplicantEdit extends Component {\n\n    // state = {\n    //     name: null,\n    //     email: localStorage.getItem('email'),\n    //     education: null,\n    //     skills: null,\n    // }\n    constructor(props){\n        super(props);\n        this.state = {\n            name: null,\n            email: localStorage.getItem('email'),\n            education: null,\n            skills: null,\n            data: null,\n        }\n    }\n\n    propTypes = {\n        email: propTypes.string,\n        getApplicantData: propTypes.func.isRequired,\n        updateApplicantData: propTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps){\n        const { applicantData } = this.props;\n        if(applicantData !== prevProps.applicantData){\n            this.setState({\n                name: this.props.applicantData.name,\n                email: this.props.applicantData.email,\n                skills: this.props.applicantData.skills,\n                education: this.props.applicantData.education\n            })\n        }\n    }\n\n    componentDidMount(){\n        const user = {\n            email: this.props.email,\n        }\n        this.props.getApplicantData(user);\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    handleSkillListChange = (index, event) => {\n        var skills = this.state.skills.slice(); // Make a copy of the emails first.\n        skills[index] = event.target.value; // Update it with the modified email.\n        this.setState({skills: skills}); // Update the state.\n    }\n\n    handleEducationListChangeFirst = (index, event) => {\n        var education = this.state.education.slice(); // Make a copy of the emails first.\n        education[index][0] = event.target.value; // Update it with the modified email.\n        this.setState({education: education});\n    }\n\n    handleEducationListChangeSec = (index, event) => {\n        var education = this.state.education.slice(); // Make a copy of the emails first.\n        education[index][1] = event.target.value; // Update it with the modified email.\n        this.setState({education: education});\n    }\n    handleEducationListChangeThi = (index, event) => {\n        var education = this.state.education.slice(); // Make a copy of the emails first.\n        education[index][2] = event.target.value; // Update it with the modified email.\n        this.setState({education: education});\n    }\n\n    addNewSkill = () => {\n        this.setState({\n            skills: this.state.skills.concat('')\n        })\n    }\n\n    addNewEducation = () => {\n        this.setState({\n            education: this.state.education.concat([['','','']])\n        })\n    }\n\n    deleteSkill = (name) => {\n        this.setState({\n            skills: this.state.skills.filter(function(person) { \n            return person !== name \n        })});\n    }\n\n    deleteEducation = (name) => {\n        this.setState({\n            education: this.state.education.filter(function(person) { \n            return person !== name \n        })});\n    }\n\n    updateApplicantData = () => {\n        var updatedData = {\n            _id: this.props.applicantData._id,\n            name: this.state.name,\n            skills: this.state.skills,\n            email: this.state.email,\n            education: this.state.education,\n            rating: this.props.applicantData.rating,\n            total_ratings: this.props.applicantData.total_ratings\n        }\n        this.props.updateApplicantData(updatedData)\n    }\n\n    render() {\n        return (\n            <div className = \"box\">\n                <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\n                    <Form>\n                    <FormGroup>\n                        <Label>Name:</Label>\n                        <h2>{this.state.name}</h2>\n                        <Label>Email:</Label>\n                        <h2>{this.state.email}</h2>\n                        <Label>Skills:</Label>\n                        { this.state.skills != null ? this.state.skills.map((name, index) => (\n                            <div key={index} className=\"input-group\">\n                                <Button className= \"remove-btn\" color=\"danger\" size=\"sm\" onClick = {this.deleteSkill.bind(this, name)}>&times;</Button>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    onChange={this.handleSkillListChange.bind(this, index)} value={name}/>\n                            </div>\n                        ))\n                        : null}\n                        <Button block onClick={this.addNewSkill}>Add skill</Button>\n                        <Label>Education:</Label>\n                        { this.state.education != null ? this.state.education.map((edu, index) => (\n                            <div key={index} className=\"input-group\">\n                                <Button className= \"remove-btn\" color=\"danger\" size=\"sm\" onClick = {this.deleteEducation.bind(this, edu)}>&times;</Button>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    onChange={this.handleEducationListChangeFirst.bind(this.target, index)} value={edu[0]}/>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    onChange={this.handleEducationListChangeSec.bind(this.target, index)} value={edu[1]}/>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    onChange={this.handleEducationListChangeThi.bind(this.target, index)} value={edu[2]}/>\n                            </div>\n                        ))\n                        : null}\n                        <Button block onClick={this.addNewEducation}>Add Education</Button>\n                        <Button block onClick={this.updateApplicantData}>Submit</Button>\n                        </FormGroup>\n                    </Form>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    email: state.auth.email,\n    applicantData: state.applicantDataReducer.applicantData\n})\n\nexport default connect(mapStateToProps, { getApplicantData, updateApplicantData })(ApplicantEdit);\n","/Users/samaykothari/Desktop/Academic/DASS/assignment1/frontend/job_application/src/actions/applicantActions.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":9,"column":35,"nodeType":"114","messageId":"115","endLine":9,"endColumn":41},{"ruleId":"116","severity":1,"message":"117","line":9,"column":1,"nodeType":"118","endLine":28,"endColumn":2},{"ruleId":"116","severity":1,"message":"117","line":12,"column":1,"nodeType":"118","endLine":58,"endColumn":2},{"ruleId":"108","replacedBy":"119"},{"ruleId":"110","replacedBy":"120"},{"ruleId":"112","severity":1,"message":"121","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":25},{"ruleId":"112","severity":1,"message":"122","line":7,"column":5,"nodeType":"114","messageId":"115","endLine":7,"endColumn":15},{"ruleId":"112","severity":1,"message":"123","line":9,"column":5,"nodeType":"114","messageId":"115","endLine":9,"endColumn":12},{"ruleId":"124","severity":1,"message":"125","line":76,"column":17,"nodeType":"126","messageId":"127","endLine":76,"endColumn":19},{"ruleId":"112","severity":1,"message":"128","line":15,"column":34,"nodeType":"114","messageId":"115","endLine":15,"endColumn":38},{"ruleId":"116","severity":1,"message":"117","line":9,"column":1,"nodeType":"118","endLine":54,"endColumn":2},{"ruleId":"112","severity":1,"message":"129","line":6,"column":42,"nodeType":"114","messageId":"115","endLine":6,"endColumn":55},{"ruleId":"112","severity":1,"message":"121","line":7,"column":10,"nodeType":"114","messageId":"115","endLine":7,"endColumn":25},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["130"],["131"],"'combineReducers' is defined but never used.","'AUTH_ERROR' is defined but never used.","'NavLink' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user' is assigned a value but never used.","'ListGroupItem' is defined but never used.","no-global-assign","no-unsafe-negation"]